clc; clear; close all;
f = 4000;
fs = 10*f;
t = 0:1/fs:100/fs;
x = 7*sin(2*pi*f*t);
n = 0: length(t)-1;
subplot(5,1,1);
plot(t,x);
ylabel("Amplitude");
xlabel("Time");
title("Input Signal");
%Sampling
xn = 7*sin(2*pi*f*n/fs);
subplot(5,1,2);
stem(n,xn);
title("Sampled Wave");
ylabel("Amplitude");
xlabel("Sample No");
y=[];
% Quantization and Encoding
for i=1:length(x)
if x(i)<-6.5
a=[0 0 0 0];
y=[y a];
end
if (x(i)<-5.5 && x(i)>-6.5)
a=[0 0 1];
y=[y a];
end
if (x(i)<-4.5 && x(i)>-5.5)
a=[0 0 1 0];
y=[y a];
end
if (x(i)<-3.5 && x(i)>-4.5)
a=[0 0 1 1];
y=[y a];
end
if (x(i)<-2.5 && x(i)>-3.5)
a=[0 1 0 0];
y=[y a];
end
if (x(i)<-1.5 && x(i)>-2.5)
a=[0 1 0 1];
y=[y a];
end
if (x(i)<-0.5 && x(i)>-1.5)
a=[0 1 1 0];
y=[y a];
end
if (x(i)<0.5 && x(i)>-0.5)
a=[0 1 1 1]]
y=[y a];
end
if (x(i)<1.5 && x(i)>0.5)
a=[1 0 0 0];
y=[y a];
end
if (x(i)<2.5 && x(i)>1.5)
a=[1 0 0 1];
y=[y a];
end
if (x(i)<3.5 && x(i)>2.5)
a=[1 0 1 0];
y=[y a];
end
if (x(i)<4.5 && x(i)>3.5)
a=[1 0 1 1];
y=[y a];
end
if (x(i)<5.5 && x(i)>4.5)
a=[1 1 0 0];
y=[y a];
end
if (x(i)<6.5 && x(i)>5.5)
a=[1 1 0 1];
y=[y a];
end
if (x(i)>6.5)
a=[1 1 1 0];
y=[y a];
end
end
z=x;
% Decoding
for i = 1:4:length(y)
j=(i-1)/4 + 1;
if(y(i)==0 && y(i+1)==0 && y(i+2)==0 && y(i+3)==0)
z(j)=-7;
end
if(y(i)==0 && y(i+1)==0 && y(i+2)==0 && y(i+3)==1)5;
z(j)=-6;
end
if(y(i)==0 && y(i+1)==0 && y(i+2)==1 && y(i+3)==0)
z(j)=-5;
end
if(y(i)==0 && y(i+1)==0 && y(i+2)==1 && y(i+3)==1)
z(j)=-4;
end
if(y(i)==0 && y(i+1)==1 && y(i+2)==1 && y(i+3)==0)
z(j)=-1;
end
if(y(i)==0 && y(i+1)==1 && y(i+2)==1 && y(i+3)==1)
z(j)=0;
end
if(y(i)==1 && y(i+1)==0 && y(i+2)==0 && y(i+3)==0)
z(j)=1;
end
if(y(i)==1 && y(i+1)==0 && y(i+2)==0 && y(i+3)==1)
z(j)=2;
end
if(y(i)==1 && y(i+1)==0 && y(i+2)==1 && y(i+3)==0)
z(j)=3;
end
if(y(i)==1 && y(i+1)==0 && y(i+2)==1 && y(i+3)==1)
z(j)=4;
end
if(y(i)==1 && y(i+1)==1 && y(i+2)==0 && y(i+3)==0)
z(j)=5;
end
if(y(i)==1 && y(i+1)==1 && y(i+2)==0 && y(i+3)==1)
z(j)=6;
end
if(y(i)==1 && y(i+1)==1 && y(i+2)==1 && y(i+3)==0)
z(j)=7;
end
end
subplot(5,1,3);
stem(y);
% PCM Wave
title("PCM Wave");
ylabel("Amplitude");
xlabel("");
subplot(5,1,4);
plot(t,z); % Decoded Wave
title("Decoded Wave");
ylabel("Amplitude");
xlabel("Time");
b = fir1(10,0.2,'LOW'); % (N â€“ 1) / (2 * Fs) --> Delay in FIR Filter of N tap. Reconstruction
filter is useful in smoothing DA conversion.
out = filter(b,1,z);
subplot(5,1,5);
plot(t,out);
title("After Reconstruction filter");
ylabel("Amplitude");
xlabel("Time");