pnSequence = comm.PNSequence('Polynomial',[3 2 0], ...
'SamplesPerFrame',9,'InitialConditions',[0 0 1]);
x1 = 2*pnSequence()-1;
t1=[];
t2 = 0.002;
s1 = 63;
for i=1:length(x1)
if x1(i)==1
t1=[t1 ones(1,s1)];
else
t1=[t1 zeros(1,s1)];
end
end
x=2*randi([0,1],1,9)-1;
t3=[];
for i=1:length(x1)
if x(i)==1
t3=[t3 ones(1,s1)];
else
t3=[t3 zeros(1,s1)];
end
end
y = x1.*x;
y=y(:)'; %reshapping
t4=[];
for i=1:length(y)
if y(i)==1
t4=[t4 ones(1,s1/9)];%7 is the length of PN sequence
else
t4=[t4 zeros(1,s1/9)];
end
end
t =t2/s1:t2/s1:length(x)*t2;
subplot(5,1,1)
title('data signal')
subplot(5,1,2)
plot(t,t1);
title("Sequence")
subplot(5,1,3)
plot(t,t4)
title("spread Sequence")
noisep = awgn(t4,10);
subplot(5,1,4);
plot(noisep);
title("sequence with AWGN")
rx = [];
for i = 1:length(x)
y1=y((i-1)*9+1:9*i);
o = y1*x1;
if o>0
o1 = 1;
rx = [rx o1];
else
o1 = -1;
rx = [rx o1];
end
end
tx=[];
for i=1:length(rx)
if rx(i)==1
tx=[tx ones(1,s1)];%9 is the length of PN sequence
else
tx=[tx zeros(1,s1)];
end
end
subplot(5,1,5)
plot(t,tx)
plot(t,t3);
